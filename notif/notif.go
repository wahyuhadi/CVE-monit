package notif

import (
	"context"
	"errors"
	"flag"
	"fmt"

	"github.com/nikoksr/notify"
	"github.com/nikoksr/notify/service/telegram"
	"github.com/wahyuhadi/cve-monit/logger"
	"github.com/wahyuhadi/cve-monit/models"
)

var (
	notifications = flag.Bool("notif", false, "notification if true will notif example : --notif true")
)

func DoNotif(items []models.NotifDetails, config models.Config) error {
	logger.SetLogger("info", "notification will send if items is avail ...")
	flag.Parse()
	if len(items) == 0 {
		logger.SetLogger("warning", "no items")
		return errors.New("no issue")
	}

	if *notifications {
		logger.SetLogger("info", "send notif")
		for _, i := range items {
			telegramService, _ := telegram.New(config.TelegramNotif.BotKey)
			telegramService.AddReceivers(config.TelegramNotif.ID)
			notifier := notify.New()
			notifier.UseServices(telegramService)
			cveid := fmt.Sprintf("CVE       -> %v", i.CveID)
			summary := fmt.Sprintf("Summary -> %v", i.Summary)
			score := fmt.Sprintf("Score     -> %v", i.CvssScore)
			URL := fmt.Sprintf("URL         -> %v", i.URL)
			message := cveid + "\n" + score + "\n" + summary + "\n" + URL
			_ = notifier.Send(
				context.Background(),
				"Semangat pagi !!",
				message,
			)
		}
	}

	return nil
}
