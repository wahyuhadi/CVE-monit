package main

import (
	"encoding/json"
	"errors"
	"flag"
	"fmt"
	"log"
	"os"

	"github.com/wahyuhadi/cve-monit/cve"
	"github.com/wahyuhadi/cve-monit/models"
	"github.com/wahyuhadi/cve-monit/notif"
)

var (
	configFile = flag.String("config", "config.json", "Location file config by default config.json example : --config /tmp/conf.json ")
)

func main() {
	flag.Parse()
	config, err := LoadConfiguration(*configFile)
	if err != nil {
		log.Println(err)
		os.Exit(1)
	}

	data, err := cve.GetCveByProductID(config)
	if err != nil {
		log.Println(err)
		os.Exit(1)
	}

	notif.DoNotif(data, config)
}

func LoadConfiguration(file string) (models.Config, error) {
	var config models.Config
	configFile, err := os.Open(file)
	if err != nil {
		errMsg := fmt.Sprintf("oops file not found %v", file)
		return config, errors.New(errMsg)
	}

	jsonParser := json.NewDecoder(configFile)
	err = jsonParser.Decode(&config)
	if err != nil {
		errMsg := fmt.Sprintf("oops something error  in %v", file)
		return config, errors.New(errMsg)
	}

	if config.TelegramNotif.BotKey == "" {
		errMsg := fmt.Sprintf("oops botkey or id  not found in %v", file)
		return config, errors.New(errMsg)
	}

	defer configFile.Close()
	return config, nil
}
